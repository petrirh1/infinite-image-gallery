{"version":3,"sources":["components/Image.js","components/Spinner.js","components/Images.js","components/Header.js","App.js","index.js"],"names":["Image","image","className","src","urls","regular","alt","user","profile_image","medium","href","links","html","target","rel","name","Spinner","Images","useState","images","setImages","start","setStart","isLoading","setIsLoading","hasMore","setHasMore","useEffect","fetchImages","axios","get","then","res","data","catch","err","console","error","dataLength","length","next","endMessage","scrollThreshold","map","index","key","Header","App","ReactDOM","render","document","getElementById"],"mappings":"oSA+BeA,G,MA5BD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,QAAQC,IAAKF,EAAMG,KAAKC,QAASC,IAAI,KACpD,yBAAKJ,UAAU,qBACb,yBAAKA,UAAU,WACb,yBACEA,UAAU,gBACVC,IAAKF,EAAMM,KAAKC,cAAcC,OAC9BH,IAAI,KAEN,uBAAGJ,UAAU,YACX,uBACEQ,KAAMT,EAAMM,KAAKI,MAAMC,KACvBC,OAAO,SACPC,IAAI,uBACHb,EAAMM,KAAKQ,OAGhB,uBAAGL,KAAMT,EAAMU,MAAMC,KAAMC,OAAO,SAASC,IAAI,uBAC7C,uBAAGZ,UAAU,kBAAb,cCXGc,G,MATC,WACd,OACE,yBAAKd,UAAU,mBACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,c,iBC8CNe,EA/CA,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,OAEOF,mBAAS,GAFhB,mBAEZG,EAFY,KAELC,EAFK,OAGeJ,oBAAS,GAHxB,mBAGZK,EAHY,KAGDC,EAHC,OAIWN,oBAAS,GAJpB,mBAIZO,EAJY,KAIHC,EAJG,KAOnBC,qBAAU,WACRC,MAEC,IAEH,IAAMA,EAAc,WAClBN,EAASD,EARG,IAUZQ,IACGC,IADH,4BAVY,GAUZ,kBAC2CT,IACxCU,MAAK,SAAAC,GACJZ,EAAU,GAAD,mBAAKD,GAAL,YAAgBa,EAAIC,QAC7BT,GAAa,MAEdU,OAAM,SAAAC,GACLC,QAAQC,MAAMF,GACdT,GAAW,OAIjB,OACE,kBAAC,IAAD,CACEY,WAAYnB,EAAOoB,OACnBC,KAAMZ,EACNH,QAASA,EACTgB,WAAY,4EACZC,gBAAiB,KAChBnB,EACC,kBAAC,EAAD,MAEA,yBAAKrB,UAAU,aACZiB,EAAOwB,KAAI,SAAC1C,EAAO2C,GAAR,OACV,kBAAC,EAAD,CAAOC,IAAKD,EAAO3C,MAAOA,U,yBC9BvB6C,EAXA,WACb,OACE,kBAAC,IAAD,KACE,yBAAK5C,UAAU,kBACb,yBAAKA,UAAU,WAAWC,IAAI,iBAAiBG,IAAI,KACnD,wBAAIJ,UAAU,gBAAd,uBCKO6C,G,MATH,WACV,OACE,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCLN8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5c42a16.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Image.css';\r\n\r\nconst Image = ({ image }) => {\r\n  return (\r\n    <div className='img-container'>\r\n      <img className='image' src={image.urls.regular} alt='' />\r\n      <div className='details-container'>\r\n        <div className='details'>\r\n          <img\r\n            className='profile-image'\r\n            src={image.user.profile_image.medium}\r\n            alt=''\r\n          />\r\n          <p className='username'>\r\n            <a\r\n              href={image.user.links.html}\r\n              target='_blank'\r\n              rel='noopener noreferrer'>\r\n              {image.user.name}\r\n            </a>\r\n          </p>\r\n          <a href={image.links.html} target='_blank' rel='noopener noreferrer'>\r\n            <i className='material-icons'>link</i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport './css/Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='loading-spinner'>\r\n      <div className='circle'></div>\r\n      <div className='circle'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Image from './Image';\r\nimport Spinner from './Spinner';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst Images = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [start, setStart] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const count = 25;\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchImages = () => {\r\n    setStart(start + count);\r\n\r\n    axios\r\n      .get(`/api/photos?count=${count}&start=${start}`)\r\n      .then(res => {\r\n        setImages([...images, ...res.data]);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        setHasMore(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={images.length}\r\n      next={fetchImages}\r\n      hasMore={hasMore}\r\n      endMessage={<h5>You've just reached the end of the internet.</h5>}\r\n      scrollThreshold={0.85}>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className='container'>\r\n          {images.map((image, index) => (\r\n            <Image key={index} image={image} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport './css/Header.css';\r\nimport Headroom from 'react-headroom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Headroom>\r\n      <div className='header fade-in'>\r\n        <img className='app-logo' src='./app-logo.svg' alt='' />\r\n        <h3 className='header-title'>Infinite Gallery</h3>\r\n      </div>\r\n    </Headroom>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Images from './components/Images';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <Images />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}